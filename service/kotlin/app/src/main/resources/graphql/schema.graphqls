directive @key(fields: String!) repeatable on OBJECT | INTERFACE

# Specific entity types implementing interfaces
type Product @key(fields: "id") {
  id: ID!
  name: String!
  sku: String!
  priceCents: Int!
  stock: Int!
  createdAt: String
  updatedAt: String
  version: Int!
}

type Customer @key(fields: "id") {
  id: ID!
  name: String!
  email: String!
  status: String!
  createdAt: String
  updatedAt: String
  version: Int!
}

# Query type with clean, focused operations
type Query {
  # Entity queries
  products: [Product!]!
  product(id: ID!): Product
  customers: [Customer!]!
  customer(id: ID!): Customer
}

# Mutation type with consistent patterns
type Mutation {
  # Product mutations
  createProduct(input: ProductInput!): Product!
  updateProduct(id: ID!, input: ProductInput!): Product!
  deleteProduct(id: ID!): Boolean!
  
  # Customer mutations
  createCustomer(input: CustomerInput!): Customer!
  updateCustomer(id: ID!, input: CustomerInput!): Customer!
  deleteCustomer(id: ID!): Boolean!
}

# Input types with inheritance patterns
input BaseEntityInput {
  name: String!
}

input ProductInput {
  name: String!
  sku: String!
  priceCents: Int!
  stock: Int!
}

input CustomerInput {
  name: String!
  email: String!
  status: String!
}

# Enums for better type safety
enum CustomerStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}
