<configuration>
  <!-- Production: Structured JSON format optimized for Loki + OpenTelemetry -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <filter class="io.github.salomax.neotool.logging.MDCFilter" />
    <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
      <providers>
        <timestamp/>
        <logLevel/>
        <loggerName/>
        <message/>
        <mdc/>
        <stackTrace/>
        <pattern>
          <pattern>
            {
              "service": "neotool-service",
              "environment": "production",
              "version": "${APP_VERSION:-unknown}",
              "instance": "${HOSTNAME:-unknown}",
              "trace_id": "%X{traceId:-}",
              "span_id": "%X{spanId:-}",
              "otel_trace_id": "%X{otel.trace_id:-}",
              "otel_span_id": "%X{otel.span_id:-}"
            }
          </pattern>
        </pattern>
      </providers>
    </encoder>
  </appender>
  
  <!-- Dedicated appender for Loki with optimized labels -->
  <appender name="LOKI" class="com.github.loki4j.logback.Loki4jAppender">
    <http>
      <url>http://loki:3100/loki/api/v1/push</url>
    </http>
    <format>
      <label>
        <pattern>service=neotool-service,environment=production,level=%level,logger=%logger{20}</pattern>
      </label>
      <message>
        <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{correlationId:-}] %-5level %logger{36} - %msg%n</pattern>
      </message>
    </format>
    <filter class="io.github.salomax.neotool.logging.MDCFilter" />
  </appender>
  
  <root level="INFO">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="LOKI" />
  </root>
  
  <!-- Application-specific loggers -->
  <logger name="io.github.salomax.neotool" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="LOKI" />
  </logger>
  
  <!-- Micronaut framework logging -->
  <logger name="io.micronaut" level="WARN" additivity="false">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="LOKI" />
  </logger>
  
  <!-- Reduce database logging in production -->
  <logger name="org.hibernate.SQL" level="WARN" additivity="false">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="LOKI" />
  </logger>
  
  <!-- OpenTelemetry logging -->
  <logger name="io.opentelemetry" level="INFO" additivity="false">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="LOKI" />
  </logger>
</configuration>
