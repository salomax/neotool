name: CI
on:
  push: { branches: [ main, master ] }
  pull_request: { branches: [ "**" ] }
concurrency: { group: ${{ github.workflow }}-${{ github.ref }}, cancel-in-progress: true }
env: { CI: true, NEXT_TELEMETRY_DISABLED: 1 }

jobs:
  unit:
    name: Typecheck, Lint & Vitest
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: web } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: pnpm, cache-dependency-path: web/pnpm-lock.yaml }
      - uses: pnpm/action-setup@v3
        with: { version: 9 }
      - name: Install
        run: pnpm i --frozen-lockfile || pnpm i
      - name: Typecheck
        run: pnpm run typecheck
      - name: Lint
        run: pnpm run lint -- --max-warnings=0
      - name: Unit tests (Vitest)
        run: pnpm run test

  e2e:
    name: Playwright E2E
    runs-on: ubuntu-latest
    needs: unit
    timeout-minutes: 20
    defaults: { run: { working-directory: web } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: pnpm, cache-dependency-path: web/pnpm-lock.yaml }
      - uses: pnpm/action-setup@v3
        with: { version: 9 }
      - name: Install
        run: pnpm i --frozen-lockfile || pnpm i
      - name: Cache Playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('web/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-playwright-
      - name: Install Playwright
        run: pnpm exec playwright install --with-deps
      - name: E2E tests
        env: { NODE_ENV: development }
        run: pnpm run e2e
      - if: failure()
        name: Upload report
        uses: actions/upload-artifact@v4
        with: { name: playwright-report, path: web/playwright-report, if-no-files-found: ignore }
